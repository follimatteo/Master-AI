% pwp base case

% import for global constraints
include "globals.mzn";

% paper roll dimensions
int: W;
int: H;
int: min_dx;
int: min_dy;

% number of necessary pieces of paper to cut off
int: n;
set of int: NPIECES = 1..n;


% dimension of each piece of paper
array[NPIECES] of int: dx;
array[NPIECES] of int: dy;

% variables
array[NPIECES] of var 0..(W-min_dx): ox;
array[NPIECES] of var 0..(H-min_dy): oy;

constraint ox[1]=0;
constraint oy[1]=0;

constraint forall (i in NPIECES) (ox[i] + dx[i] <=W);
constraint forall (i in NPIECES) (oy[i] + dy[i] <=H);

% non-overlap constraint
constraint diffn(ox, oy, dx, dy);

% implied cumulative constraints
constraint cumulative(oy, dy, dx, W);
constraint cumulative(ox, dx, dy, H);

%breaking simmetry
constraint lex_lesseq(ox,reverse(ox))
            /\ lex_lesseq(oy,reverse(oy));

% search
solve:: int_search(ox, first_fail, indomain)
     :: int_search(oy, first_fail, indomain)
     satisfy;
